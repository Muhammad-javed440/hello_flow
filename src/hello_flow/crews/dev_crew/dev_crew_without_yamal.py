from crewai import Agent, Crew, Process, Task
from crewai.project import CrewBase, agent, crew, task

# If you want to run a snippet of code before or after the crew starts,
# you can use the @before_kickoff and @after_kickoff decorators
# https://docs.crewai.com/concepts/crews#example-crew-class-with-decorators


@CrewBase
class DevCrew:
   

    @agent
    def junior_python_developer(self) -> Agent:
        return Agent(
           role="Junior Python Developer",
           goal="Write a Python code solution without Python hints and pydocs. for this problem '{problem}'",
           backstory="You have 3 years of Python web development experience.You know how to use Flask and Django."
        )
        
    @agent
    def senior_python_developer(self) -> Agent:
        return Agent(
            role=" Senior Python Developer",
            goal="""Review the Python code generated by junior_python_developer for this problem '{problem}'.
                     optimize the code
                     Apply Python type hints.
                     Apply Pydocs.
                     Write 3 pytest tests for this code."""                 ,
            backstory="""You have 20 years of experience in Machine Learning, Deep Learning, Generative AI, and Agentic AI.
                         You have a good command of CrewAI, LangGraph, and AutoGen."""
        )
    @task
    def write_code(self) -> Task:
        return Task(
            description=" You have to write a Python solution without Python type hints and pydocs. for this problem '{problem}'.",
            expected_output=" Return only the Python code.",
            agent=self.junior_python_developer()
        )
        
    @task
    def review_code(self) -> Task:
        return Task(
            description=""" You have to review the Python code generated by junior_python_developer for this problem '{problem}'.
                           optimize the code
                            Apply Python type hints.
                           Apply Pydocs.
                            Write 3 pytest tests for this code.""",
            expected_output="Return only the Python code.",
            agent=self.senior_python_developer()
            
        )

    @crew
    def crew(self) -> Crew:
        """Creates the Research Crew"""

        return Crew(
            agents=self.agents,  # Automatically created by the @agent decorator
            tasks=self.tasks,  # Automatically created by the @task decorator
            process=Process.sequential,
            verbose=True,
        )
